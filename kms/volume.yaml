Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Instance Configuration"
        Parameters:
          - VpcId
          - KeyPair
          - AmiId
          - SSHLocation
      - Label:
          default: "Volume Configuration"
        Parameters:
          - AvailabilityZone
          - KmsKeyId

Parameters:
  VpcId:
    Description: VPC the instance will be launched into
    Type: AWS::EC2::VPC::Id
  KmsKeyId:
    Description: Master key that will be used to create the encrypted volume
    Type: String
    Default: aws/ebs
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
  KeyPair:
    Description: Key pair to connect to the instance
    Type: AWS::EC2::KeyPair::KeyName
  AmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  SSHLocation:
    Description: Ip address allowed to SSH into the instance
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: "0.0.0.0/0"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Enable access via SSH
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHLocation
        Description: SSH access
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F1000
            reason: All traffic outbound can be allowed

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref InstanceRole]

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: KmsEncryptDecrypt
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                Resource: !Ref KmsKeyId

  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      ImageId: !Ref AmiId
      KeyName: !Ref KeyPair
      InstanceType: t3.micro
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroupIds: [!Ref SecurityGroup]

  MyVolume:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      AutoEnableIO: true
      Encrypted: true
      KmsKeyId: !Ref KmsKeyId
      Size: 5
      VolumeType: standard

  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref MyInstance
      VolumeId: !Ref MyVolume
      Device: "/dev/sdh"

Outputs:
  InstanceId:
    Value: !Ref MyInstance
  VolumeId:
    Value: !Ref MyVolume
