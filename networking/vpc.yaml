Resources:
  MyVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.200.0.0/16"

      # Amazon DNS server resolves DNS hostnames for instances to their corresponding IP addresses
      EnableDnsSupport: true

      # Instances in the VPC get DNS hostnames
      EnableDnsHostnames: true

      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: cloudformation-vpc

  Ipv6CidrBlock:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref MyVpc
      AmazonProvidedIpv6CidrBlock: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: cloudformation-igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVpc
      InternetGatewayId: !Ref InternetGateway
  EgressOnlyInternetGateway:
    Type: AWS::EC2::EgressOnlyInternetGateway
    Properties:
      VpcId: !Ref MyVpc

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: cloudformation-public-rt
  PublicRouteIpv4:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
  PublicRouteIpv6:
    Type: AWS::EC2::Route
    DependsOn: EgressOnlyInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationIpv6CidrBlock: "::/0"
      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway

Outputs:
  VpcId:
    Value: !Ref MyVpc
  Ipv4CidrBlock:
    Value: !GetAtt MyVpc.CidrBlock
  Ipv6CidrBlock:
    Value: !Select [0, !GetAtt MyVpc.Ipv6CidrBlocks]
